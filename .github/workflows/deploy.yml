name : IaC Deploy Workflow

on : 
    workflow_dispatch:
        
jobs :
    Deploy:
        runs-on: ubuntu-latest

        steps : 

            - name: Checkout Repository
              uses: actions/checkout@v3


            - name : Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                    terraform_version: "1.1.7"
            
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4.1.0
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: eu-central-1

            - name: Terraform Init
              run : terraform init

            - name: Import existing AWS resources if they exist
              run: |
                # S3 Bucket
                aws s3api head-bucket --bucket assignement-bucket-fadi7-2 --region eu-central-1 2>/dev/null && \
                terraform import aws_s3_bucket.assign_bucket assignement-bucket-fadi7-2 || echo "S3 bucket not found, will be created."

                # IAM Policy
                aws iam get-policy --policy-arn arn:aws:iam::992824239500:policy/lambda_s3_policy 2>/dev/null && \
                terraform import aws_iam_policy.lambda_s3_policy arn:aws:iam::992824239500:policy/lambda_s3_policy || echo "Policy not found."

                # IAM Role
                aws iam get-role --role-name assign_iam 2>/dev/null && \
                terraform import aws_iam_role.assign_iam assign_iam || echo "IAM role not found."

                # IAM Role Policy Attachment
                terraform import aws_iam_role_policy_attachment.test_attach assign_iam/arn:aws:iam::992824239500:policy/lambda_s3_policy || echo "Role attachment import skipped."

                # Lambda Function
                aws lambda get-function --function-name list-s3-files-2 --region eu-central-1 2>/dev/null && \
                terraform import aws_lambda_function.s3_lambda list-s3-files-2 || echo "Lambda not found."

                # Lambda Permission (only if Lambda exists)
                terraform import aws_lambda_permission.allow_s3 list-s3-files-2/AllowExecutionFromS3 || echo "Lambda permission not found."

                # SNS Topic
                aws sns get-topic-attributes --topic-arn arn:aws:sns:eu-central-1:992824239500:user-notifications --region eu-central-1 2>/dev/null && \
                terraform import aws_sns_topic.assign_topic arn:aws:sns:eu-central-1:992824239500:user-notifications || echo "SNS topic not found."

                # SNS Subscription
                terraform import aws_sns_topic_subscription.user_updates arn:aws:sns:eu-central-1:992824239500:user-notifications:e38c207b-b3d9-494e-bbc9-91655fccb16c || echo "SNS subscription import skipped."


            - name: Terraform Apply
              run: terraform apply -auto-approve

            - name: Sleep before destroy (for test)
              run: sleep 60    

            - name: Terraform Destroy # For Testing purposes only . will be removed !
              run:  terraform destroy -auto-approve 